/*
 * GracenoteOnConnectDataDeliveryAPIsLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.tmsapi.data;

import com.tmsapi.data.controllers.*;
import com.tmsapi.data.http.client.HttpClient;

public class GracenoteOnConnectDataDeliveryAPIsClient {
    /**
     * Singleton access to PublicPlanMethods controller
     * @return	Returns the PublicPlanMethodsController instance 
     */
    public PublicPlanMethodsController getPublicPlanMethods() {
        return PublicPlanMethodsController.getInstance();
    }

    /**
     * Singleton access to Lineups controller
     * @return	Returns the LineupsController instance 
     */
    public LineupsController getLineups() {
        return LineupsController.getInstance();
    }

    /**
     * Singleton access to Stations controller
     * @return	Returns the StationsController instance 
     */
    public StationsController getStations() {
        return StationsController.getInstance();
    }

    /**
     * Singleton access to Programs controller
     * @return	Returns the ProgramsController instance 
     */
    public ProgramsController getPrograms() {
        return ProgramsController.getInstance();
    }

    /**
     * Singleton access to Series controller
     * @return	Returns the SeriesController instance 
     */
    public SeriesController getSeries() {
        return SeriesController.getInstance();
    }

    /**
     * Singleton access to MoviesOnTV controller
     * @return	Returns the MoviesOnTVController instance 
     */
    public MoviesOnTVController getMoviesOnTV() {
        return MoviesOnTVController.getInstance();
    }

    /**
     * Singleton access to MoviesInTheatres controller
     * @return	Returns the MoviesInTheatresController instance 
     */
    public MoviesInTheatresController getMoviesInTheatres() {
        return MoviesInTheatresController.getInstance();
    }

    /**
     * Singleton access to MovieTrailers controller
     * @return	Returns the MovieTrailersController instance 
     */
    public MovieTrailersController getMovieTrailers() {
        return MovieTrailersController.getInstance();
    }

    /**
     * Singleton access to Sports controller
     * @return	Returns the SportsController instance 
     */
    public SportsController getSports() {
        return SportsController.getInstance();
    }

    /**
     * Singleton access to Celebrities controller
     * @return	Returns the CelebritiesController instance 
     */
    public CelebritiesController getCelebrities() {
        return CelebritiesController.getInstance();
    }

    /**
     * Get the shared http client currently being used for API calls
     * @return The http client instance currently being used
     */
    public HttpClient getSharedHttpClient() {
        return BaseController.getClientInstance();
    }
    
    /**
     * Set a shared http client to be used for API calls
     * @param httpClient The http client to use
     */
    public void setSharedHttpClient(HttpClient httpClient) {
        BaseController.setClientInstance(httpClient);
    }

    /**
     * Default constructor 
     */     
    public GracenoteOnConnectDataDeliveryAPIsClient() {	
	}

}